@{
    Layout = "~/Views/Shared/header.cshtml";
}

@using System.Xml.Serialization;

@{ 
    XmlSerializer formatter = new XmlSerializer(typeof(List<string>));
    List<string> imgList = new List<string>();
    List<string> phoneList = new List<string>();
}

@{using (StringReader reader = new StringReader(Model.Images))
    {
        imgList = (List<string>)formatter.Deserialize(reader);
    }
    //try
    //{
    //    using (StringReader reader = new StringReader(Model.Phone))
    //    {
    //        phoneList = (List<string>)formatter.Deserialize(reader);
    //    }
    //} catch
    //{
    //    throw;
    //} 
}

<script>
    var viewModel = { phones: ko.observableArray() }

    $(document).ready(function () {
        ko.applyBindings(viewModel);
    });

    function showPhone() {

         $.ajax({
             type: "GET",
             url: "/Home/GetPhoneAjax",
             data: {"id" : @Model.Id },
             contentType: "application/json; charset=utf-8",
             success: function (response, status) {
                 viewModel.phones.push.apply(viewModel.phones, response);
             },
             failure: function (response) {
                 alert(response);
             }
         });
     }
</script>

<main>
   
@{
    <div style="text-align: right;">
        @if (Model.AdUrl != null)
        {
            <a href="@Model.AdUrl" class="origin">Go to origin</a>
        }
        else
        {
            <p class="origin">It is origin</p>
        }
    </div>
    var src = Model.PrevImage;
    if (Model.PrevImage == null)
    {
        src = "../../Content/images/nophoto.png";
    }
    <div class="information">
        <div class="detail-title">
            <h2>@Model.Title</h2>
        </div>
        <div style="text-align: right;">
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "" })
            @Html.ActionLink("Remove", "Remove", new { id = Model.Id }, new { @class = "" })
        </div>
        <div class="row">
            <div class="prev-image">
                <img src="@src" />
            </div>
            <div class="general-info">
                <p><strong>Тип: </strong>@Model.Type </p>
                <p><strong>Адрес: </strong><span id="Address">@Model.Address</span> </p>
                <p><strong>Комнат: </strong> @Model.RoomsCount </p>
                @if (Model.Floors != null && Model.FloorsCount != null)
                {
                    <p><strong>Этаж: </strong>   @Model.Floors из @Model.FloorsCount </p>
                }
                @if (Model.Area != null)
                {
                    <p><strong>Площадь: </strong>@Model.Area </p>
                }
                <p><strong>Цена: </strong>   @Model.Value </p>
                <p><strong>Арендатор: </strong>@Model.Author </p>
                <div class="phone-set">
                    <p><strong>Телефон(ы): </strong></p>
                    @foreach (var phoneItem in phoneList)
                    {
                        <p>@phoneItem</p>
                    }
                </div>
            </div>
        </div>
        <div class="description">
            <p>@Model.Details</p>
        </div>
        <div class="image-set">
            @foreach (var img in imgList)
            {
                <img src='@img' />
            }
        </div>
        <div class="map-block">
            <div id="map"></div>
        </div>

        <ul data-bind="foreach: phones">
            <li data-bind="text: $data"></li>
        </ul>

        <form id="frm" method="get">
            <button id="button" type="button" onclick="showPhone()">Click</button>

        </form>
        
    </div>
}
</main>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDs0eQvxU2jsqf71-Smlevn-NsX8W_V74g&callback=initMap"></script>
<script src="~/Scripts/mapInitialize.js"></script>