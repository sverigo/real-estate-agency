@using real_estate_agency.Models.ViewModels;
@using real_estate_agency.Models;
@using real_estate_agency.Resources;
@model MainPageViewModel

@{
    Layout = "~/Views/Shared/header.cshtml";
}

@Styles.Render("~/Content/pagedlist")

<main class="main-index">
    <div class="container-fluid">
        <div class="parser-block">
            @using (Html.BeginForm("Click", "Home"))
            {
                <input type="submit" value="@Resource.GetLastAds" class="btn btn-primary parsing-button" />
            }
        </div>
        <div class="filter-block">
            @using (Ajax.BeginForm("Ad", "Home", null, new AjaxOptions { UpdateTargetId = "results" }, new { @class = "filters" }))
            {
                <div class="form-group filter sort">
                    <select name="RentType" id="RentType" class="form-control sort-dropdown">
                        @{
                            List<Category> catlist = real_estate_agency.Infrastructure.CategoryManager.GetCategoryList();
                            <option value="All">@Resource.AllCategories</option>
                            foreach (Category cat in catlist)
                            {
                                <option value="@cat.Name">@cat.Name</option>
                            }
                        }
                    </select>

                    @Html.DropDownList("SortType", new List<SelectListItem> {
                                                                    new SelectListItem() {Text=Resource.SortType1, Value="valueNone"},
                                                                    new SelectListItem() {Text=Resource.SortType2, Value="valueAsc"},
                                                                    new SelectListItem() {Text=Resource.SortType3, Value="valueDesc"}
                                                           }, new { @class = "form-control sort-dropdown" })
                </div>
                <div class="form-group filter quantity">
                    @Html.EditorFor(model => model.MinQuantity, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterQuantityFrom } })
                    @Html.EditorFor(model => model.MaxQuantity, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterQuantityTo } })
                    <select name="Currency" id="Currency" class="form-control sort-dropdown">
                        @foreach (CurrencyRate currency in real_estate_agency.Infrastructure.CurrencyOperations.GetCurrentExchangeRate())
                        {
                            <option>@currency.NameCode</option>
                        }
                    </select>
                </div>
                <div class="form-group filter rooms">
                    @Html.EditorFor(model => model.MinRoomsCount, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterRoomsFrom } })
                    @Html.EditorFor(model => model.MaxRoomsCount, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterRoomsTo } })
                </div>
                <div class="form-group filter floors">
                    @Html.EditorFor(model => model.MinFloor, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterFloorFrom } })
                    @Html.EditorFor(model => model.MaxFloor, new { htmlAttributes = new { @class = "form-control filter-field", @placeholder = Resource.FilterFloorTo } })
                </div>
                <div class="filter search">
                    <input class="btn btn-primary filter-button" type="submit" value="@Resource.FindAd" />
                </div>

            }

        </div>
        <div class="block col-md-12">
            <div id="results" class="row">
                @{Html.RenderAction("Ad");}
            </div>
        </div>
    </div>
</main>
